import { useState } from "react";
import axios from 'axios';
import {
    Button,
    Container,
    Header,
    Input,
    Multiselect,
    MultiselectProps,
    SpaceBetween,
    BreadcrumbGroup,
    ContentLayout,
    Box,
} from "@cloudscape-design/components";
import BaseAppLayout from "../../../components/base-app-layout";
import { useOnFollow } from "../../../common/hooks/use-on-follow";
import { APP_NAME } from "../../../common/constants";

function NewsletterPage() {
    const [selectedOptions, setSelectedOptions] = useState<MultiselectProps.Option[]>([]);
    const [email, setEmail] = useState("");

    const dropdownOptions: MultiselectProps.Options = [
        {
            label: "Frequency",
            options: [
                { label: "Daily", value: "daily" },
                { label: "Weekly", value: "weekly" },
                { label: "Monthly", value: "monthly" },
            ],
        },
        {
            label: "Keyword/Topic",
            options: [
                { label: "Amazon Braket", value: "braket" },
                { label: "Azure Quantum", value: "azure-quantum" },
                { label: "Oxford Quantum Circuits", value: "oxford" },
            ],
        },
    ];

    const handleSubscribe = async () => {
        const frequencyOption = selectedOptions.find(option => ['daily', 'weekly', 'monthly'].includes(option.value));
        const frequency = frequencyOption?.value || "";

        const keywords = selectedOptions
            .filter(option => ['braket', 'azure-quantum', 'oxford'].includes(option.value))
            .map(option => option.value)
            .filter(keyword => keyword); // Ensure no undefined values are included

        if (!email || !frequency || keywords.length === 0) {
            alert('Please ensure you have entered your email, selected a frequency, and at least one keyword.');
            return;
        }

        const postData = {
            email: email,
            frequency: frequency,
            keywords: keywords
        };

        try {
            await axios.post('https://pe7l3c89kl.execute-api.us-east-1.amazonaws.com/dev/subs', postData, {
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            alert('Subscription successful!');
        } catch (error) {
            console.error('Subscription error:', error.response ? error.response.data : error.message);
            alert('Failed to subscribe. Please try again.');
        }
    };

    return (
        <BaseAppLayout
            breadcrumbs={
                <BreadcrumbGroup
                    onFollow={useOnFollow}
                    items={[
                        {
                            text: APP_NAME,
                            href: "/",
                        },
                        {
                            text: "Newsletter",
                            href: "/section2/item1",
                        },
                    ]}
                />
            }
            content={
                <ContentLayout header={<Header>Newsletter</Header>}>
                    <SpaceBetween size="l">
                        <Header
                            variant="h1"
                            description="Get daily, weekly, or monthly updates on mentions of AWS Braket from Arxiv right in your mailbox."
                        >
                            GET OUR NEWSLETTER!
                        </Header>
                        <Container>
                            <Box padding={{ vertical: 's', horizontal: 'm' }}>
                                <p><strong>Frequency and Keyword options for your emails.</strong></p>
                                <p>This will give you a choice of what content you receive and how often you will receive emails from us.</p>
                            </Box>
                            <SpaceBetween size="m">
                                <Multiselect
                                    placeholder="Choose options"
                                    selectedOptions={selectedOptions}
                                    onChange={(event) =>
                                        setSelectedOptions([...event.detail.selectedOptions] as MultiselectProps.Option[])
                                    }
                                    options={dropdownOptions}
                                />
                                <Input
                                    type="email"
                                    placeholder="Email Address"
                                    value={email}
                                    onChange={(event) => setEmail(event.detail.value)}
                                />
                                <Button variant="primary" onClick={handleSubscribe}>SUBSCRIBE</Button>
                            </SpaceBetween>
                        </Container>
                    </SpaceBetween>
                </ContentLayout>
            }
        />
    );
}

export default NewsletterPage;
