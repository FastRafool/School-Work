import os
import json
import boto3
from boto3.dynamodb.conditions import Key

# Initialize DynamoDB
dynamodb = boto3.resource("dynamodb")
SUBSCRIBERS_TABLE_NAME = os.environ.get("SUBSCRIBERS_TABLE_NAME", "arxival-newsletter-subs")
table = dynamodb.Table(SUBSCRIBERS_TABLE_NAME)

def lambda_handler(event, context):
    try:
        # Parse the JSON body from the API Gateway event
        body = json.loads(event['body'])
        email = body['email']
        preferences = body['preferences']

        # Basic validation for the email field
        if "@" not in email:
            return response("Invalid email format", 400)

        # Insert subscription data into DynamoDB
        response = table.put_item(
            Item={
                "email": email,
                "frequency": preferences['frequency'],
                "keywords": preferences['keywords']
            }
        )
        return response("Subscription successful", 200)
    except KeyError as e:
        return response(f"Missing key: {str(e)}", 400)
    except TypeError as e:
        return response(f"Type error: {str(e)}", 400)
    except Exception as e:
        return response(f"An error occurred: {str(e)}", 500)

def response(message, status_code):
    return {
        'statusCode': status_code,
        'body': json.dumps({'message': message}),
        'headers': {
            'Content-Type': 'application/json'
        },
    }
