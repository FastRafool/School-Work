import getpass
import random
import numpy as np
import pandas as pd
from deap import base, creator, tools, algorithms
from io import StringIO
import boto3
import tkinter as tk
from tkinter import messagebox
from collections import Counter
from tkinter import simpledialog, messagebox

# Create a Tkinter root window
root = tk.Tk()

# Add a Label with a brief explanation of the program
explanation = tk.Label(root, text="This program generates a meal plan for a week based on your calorie target.")
explanation.pack()

# Define your function
def determine_individual_size(calorie_target):
    if 2100 <= calorie_target <= 2500:
        return 21
    else:
        # You can define other conditions here
        return None  # Or a default value

# Load the dataset
data = pd.read_csv('/Users/oduduotu/Downloads/ProjectDatasetFinal.csv')

# Define the problem type: Prioritizing protein intake and minimizing price
creator.create("FitnessMax", base.Fitness, weights=(1, 100, -1.0, -1.0, -1.0, -1.0))
creator.create("Individual", list, fitness=creator.FitnessMax)

# Initialize a toolbox
toolbox = base.Toolbox()

# Define the decision variable: Index of food item in the dataset
toolbox.register("index", random.randint, 0, len(data) - 1)

def run_algorithm():
    # Add the rest of the code for run_algorithm here...

# Ask the user for a calorie target
def ask_calorie_target():
    try:
        calorie_target = simpledialog.askinteger("Input", "How many calories do you want to consume per day?", parent=root, minvalue=1, maxvalue=5000)
        global DAILY_CALORIE_TARGET  # We need to declare the variable as global so we can modify it
        DAILY_CALORIE_TARGET = calorie_target
        global INDIVIDUAL_SIZE  # We also need to determine the individual size here
        INDIVIDUAL_SIZE = determine_individual_size(DAILY_CALORIE_TARGET)
        messagebox.showinfo("Info", f"Calorie target set to {calorie_target} per day.")
        # Add a Button that calls the 'run_algorithm' function when clicked, but only after the calorie target is set
        button = tk.Button(root, text="Run algorithm", command=run_algorithm)
        button.pack()
    except Exception as e:
        messagebox.showerror("Error", str(e))

# Add a Button that calls the 'ask_calorie_target' function when clicked
button = tk.Button(root, text="Set calorie target", command=ask_calorie_target)
button.pack()

root.mainloop()
